<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cxf="http://camel.apache.org/schema/cxf" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/cxf
       http://camel.apache.org/schema/cxf/camel-cxf.xsd 
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://cxf.apache.org/jaxrs
       http://cxf.apache.org/schemas/jaxrs.xsd
       http://www.springframework.org/schema/jdbc 
       http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
       http://camel.apache.org/schema/spring
       http://camel.apache.org/schema/spring/camel-spring.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd ">
<!--
	<bean id="omniSciDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.omnisci.jdbc.OmniSciDriver" />
		<property name="url" value="jdbc:omnisci:mapd.omnisci.svc.cluster.local:6274:omnisci" />
		<property name="username" value="admin" />
		<property name="password" value="HyperInteractive" />
	</bean>
-->
        <bean id="postgisDataSource" class="org.apache.commons.dbcp.BasicDataSource"
                destroy-method="close">
                <property name="driverClassName" value="org.postgresql.Driver" />
                <property name="url" value="jdbc:postgresql://ais-pg-cluster.pgo.svc.cluster.local:5432/userdb" />
                <!--property name="url" value="jdbc:postgresql://127.0.0.1:15432/userdb" /-->
                <property name="username" value="testuser" />
                <property name="password" value="redhat" />
        </bean>

        <!-- Session Factory Declaration -->
	<bean id="SessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="postgisDataSource" />
		<property name="annotatedClasses">
			<list>
				<value>org.mycompany.AISDatabaseRecord</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<!-- Enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- Transaction Manager is defined -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="SessionFactory" />
	</bean>

<!--
	<jdbc:initialize-database data-source="dataSource"
		enabled="true">
		<jdbc:script location="classpath:db-schema.sql" />
	</jdbc:initialize-database>
-->
<!--
	<bean id="omnisciSQLComponent" class="org.apache.camel.component.sql.SqlComponent">
		<property name="dataSource" ref="omniSciDataSource" />
	</bean>
-->
        <bean id="postgisSQLComponent" class="org.apache.camel.component.sql.SqlComponent">
                <property name="dataSource" ref="postgisDataSource" />
        </bean>

	<!--bean id="aisMapper" class="org.mycompany.AISMapper" /-->
	<bean id="aisRouter" class="org.mycompany.AISRouter" />
<!--
	<camelContext id="aisContext" xmlns="http://camel.apache.org/schema/spring">

		<propertyPlaceholder id="placeholder" location="classpath:sql.properties" />
		<routeBuilder ref="aisRouter" />

	</camelContext>
-->

</beans>
