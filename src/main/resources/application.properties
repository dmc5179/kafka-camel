logging.config=classpath:logback.xml

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=MyCamel

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.address=0.0.0.0

# lets use a different management port in case you need to listen to HTTP requests on 8080
management.port=8081

# disable all management enpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

spring.main.web-application-type=none
camel.springboot.main-run-controller=true
# turn off
camel.springboot.xmlRests = false
# scan in the com/foo/routes classpath
#camel.springboot.xmlRests = classpath:spring/rests/*.xml
# SQL Server Database configuration
spring.datasource.url=jdbc:sqlserver://DBIP:DBPORT;DatabaseName=DBName;
spring.datasource.username=DBUser
spring.datasource.password=DBPass
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.platform = sqlserver


kafka.host=localhost
kafka.port=9092

kafka.serializerClass=kafka.serializer.StringEncoder

# Producer properties
producer.topic=TestLog
producer.partitioner=org.apache.camel.example.kafka.StringPartitioner

# Consumer properties 

# One consumer can listen to more than one topics.[ TestLog,AccessLog ] 
consumer.topic=TestLog
consumer.group=kafkaGroup
consumer.maxPollRecords=5000

# No of consumers that connect to Kafka server
consumer.consumersCount=1

# Get records from the begining
consumer.seekTo=beginning

# The format used for the keystore 
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore.pfx
# The password used to generate the certificate
server.ssl.key-store-password=password
# The alias mapped to the certificate
server.ssl.key-alias=root
